#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQToSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="students")]
	public partial class studentDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertclass(@class instance);
    partial void Updateclass(@class instance);
    partial void Deleteclass(@class instance);
    #endregion
		
		public studentDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public studentDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public studentDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public studentDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@class> classes
		{
			get
			{
				return this.GetTable<@class>();
			}
		}
		
		public System.Data.Linq.Table<std_info> std_infos
		{
			get
			{
				return this.GetTable<std_info>();
			}
		}
		
		private void Insertstd_info(std_info obj)
		{
			this.insertstudent(obj.name, obj.gander, ((System.Nullable<int>)(obj.totalMarks)), ((System.Nullable<int>)(obj.@class)));
		}
		
		private void Updatestd_info(std_info obj)
		{
			this.updatestudent(((System.Nullable<int>)(obj.id)), obj.name, obj.gander, ((System.Nullable<int>)(obj.totalMarks)), ((System.Nullable<int>)(obj.@class)));
		}
		
		private void Deletestd_info(std_info obj)
		{
			this.deletestudent(((System.Nullable<int>)(obj.id)));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectAllStudents")]
		public ISingleResult<SelectAllStudentsResult> SelectAllStudents()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SelectAllStudentsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insertstudent")]
		public int insertstudent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string gander, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> totalmarks, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="class", DbType="Int")] System.Nullable<int> @class)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, gander, totalmarks, @class);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deletestudent")]
		public int deletestudent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updatestudent")]
		public int updatestudent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string gander, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> totalmarks, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="class", DbType="Int")] System.Nullable<int> @class)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, gander, totalmarks, @class);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.classes")]
	public partial class @class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<std_info> _std_infos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public @class()
		{
			this._std_infos = new EntitySet<std_info>(new Action<std_info>(this.attach_std_infos), new Action<std_info>(this.detach_std_infos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="class_std_info", Storage="_std_infos", ThisKey="id", OtherKey="class")]
		public EntitySet<std_info> std_infos
		{
			get
			{
				return this._std_infos;
			}
			set
			{
				this._std_infos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_std_infos(std_info entity)
		{
			this.SendPropertyChanging();
			entity.class1 = this;
		}
		
		private void detach_std_infos(std_info entity)
		{
			this.SendPropertyChanging();
			entity.class1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.std_info")]
	public partial class std_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _gander;
		
		private int _totalMarks;
		
		private System.Nullable<int> _class;
		
		private EntityRef<@class> _class1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnganderChanging(string value);
    partial void OnganderChanged();
    partial void OntotalMarksChanging(int value);
    partial void OntotalMarksChanged();
    partial void OnclassChanging(System.Nullable<int> value);
    partial void OnclassChanged();
    #endregion
		
		public std_info()
		{
			this._class1 = default(EntityRef<@class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gander", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string gander
		{
			get
			{
				return this._gander;
			}
			set
			{
				if ((this._gander != value))
				{
					this.OnganderChanging(value);
					this.SendPropertyChanging();
					this._gander = value;
					this.SendPropertyChanged("gander");
					this.OnganderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalMarks", DbType="Int NOT NULL")]
		public int totalMarks
		{
			get
			{
				return this._totalMarks;
			}
			set
			{
				if ((this._totalMarks != value))
				{
					this.OntotalMarksChanging(value);
					this.SendPropertyChanging();
					this._totalMarks = value;
					this.SendPropertyChanged("totalMarks");
					this.OntotalMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="Int")]
		public System.Nullable<int> @class
		{
			get
			{
				return this._class;
			}
			set
			{
				if ((this._class != value))
				{
					if (this._class1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclassChanging(value);
					this.SendPropertyChanging();
					this._class = value;
					this.SendPropertyChanged("@class");
					this.OnclassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="class_std_info", Storage="_class1", ThisKey="class", OtherKey="id", IsForeignKey=true)]
		public @class class1
		{
			get
			{
				return this._class1.Entity;
			}
			set
			{
				@class previousValue = this._class1.Entity;
				if (((previousValue != value) 
							|| (this._class1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._class1.Entity = null;
						previousValue.std_infos.Remove(this);
					}
					this._class1.Entity = value;
					if ((value != null))
					{
						value.std_infos.Add(this);
						this._class = value.id;
					}
					else
					{
						this._class = default(Nullable<int>);
					}
					this.SendPropertyChanged("class1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SelectAllStudentsResult
	{
		
		private int _id;
		
		private string _name;
		
		private string _gander;
		
		private int _totalMarks;
		
		private System.Nullable<int> _class;
		
		public SelectAllStudentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gander", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string gander
		{
			get
			{
				return this._gander;
			}
			set
			{
				if ((this._gander != value))
				{
					this._gander = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalMarks", DbType="Int NOT NULL")]
		public int totalMarks
		{
			get
			{
				return this._totalMarks;
			}
			set
			{
				if ((this._totalMarks != value))
				{
					this._totalMarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="Int")]
		public System.Nullable<int> @class
		{
			get
			{
				return this._class;
			}
			set
			{
				if ((this._class != value))
				{
					this._class = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
